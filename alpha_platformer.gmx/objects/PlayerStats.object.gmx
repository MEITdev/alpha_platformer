<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialise the PlayerStats

// set the GUI size
display_set_gui_size(view_wview[0], view_hview[0]);

score = 0;
highscore = 0;
player_hp = 3;
player_maxhp = 5;
player_time = 0;
player_blue_gems = 0;

// Keys required to unlock the Boss level
player_has_green_key = false;
player_has_red_key = false;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Play the background music

// Create an audio emitter
audio_em = audio_emitter_create();
audio_emitter_gain(audio_em, 0.1);
audio_play_sound_on(audio_em, snd_theme_song, true, 10);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw GUI elements

// Draw health gem outline

for (i = 0; i &lt; player_maxhp; i += 1)
{
    draw_sprite_ext(spr_hp_outline, 0, 64 + (i * 32), 64, 1, 1, 0, c_white, 1);
};

// Draw the health gems
for (i = 0; i &lt; player_hp; i += 1)
{
    draw_sprite_ext(spr_hp, 0, 64 + (i * 32), 64, 1, 1, 0, c_white, 1);
};

// Draw the number of collected Gems
draw_sprite_ext(spr_gems, 0, 64, 96, 1, 1, 0, c_white, 1);
draw_sprite_ext(spr_gems_outline, 0, 64, 96, 1, 1, 0, c_white, 1);

draw_text(128, 96, string(player_blue_gems));

// Draw the key outlines
draw_sprite_ext(spr_key_outline, 0, 64, 156, 1, 1, 0, c_white, 1);
draw_sprite_ext(spr_key_outline, 0, 128, 156, 1, 1, 0, c_white, 1);

// Draw Green key
draw_sprite_ext(spr_green_key, 0, 64, 156, 1, 1, 0, c_white, player_has_green_key);
// Draw Red key
draw_sprite_ext(spr_red_key, 0, 128, 156, 1, 1, 0, c_white, player_has_red_key);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
